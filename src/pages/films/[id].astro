---
import Layout from "@layouts/Layout.astro";
import { getEntries } from "astro:content";
import { getEntry } from "astro:content";

import { getCollection, render } from "astro:content";
import { formatDate } from "helper";
// 1. Génére un nouveau chemin pour chaque entrée de collection
export async function getStaticPaths() {
  const films = await getCollection("films");
  return films.map((films) => ({
    params: { id: films.id },
    props: { films },
  }));
}
// 2. Pour votre modèle, vous pouvez obtenir l'entrée directement à partir de la propriété
const { films } = Astro.props;
const { Content } = await render(films);

const realisateur =
  films.data.realisateur && (await getEntry(films.data.realisateur));

const scenaristes =
  films.data.scenaristes && (await getEntries(films.data.scenaristes));

const roles =
  films.data.roles &&
  (await Promise.all(
    films.data.roles.map(async (r) => ({
      role: r.role,
      acteur: await getEntry(r.acteur),
    }))
  ));
---

<Layout pageTitle={`Fiche de ${films.data.titre}`}>
  <h1 class="text-fuchsia-600">{films.data.titre}</h1>
  <p>Date de sortie : {formatDate(films.data.dateSortie)}</p>
  {realisateur && <p>realisateur: {realisateur.data.nom}</p>}
  {
    scenaristes && (
      <p>
        scenariste{scenaristes.length > 1 && <>s</>} :
        {scenaristes
          .map((s) => s.data.nom)
          .join(", ")
          .replace(/,([^,]*)$/, " et $1")}
      </p>
    )
  }

  <h2>Acteurs</h2>
  <ul>
    {
      roles && (
        <>
          <h2>Acteurs</h2>
          <ul>
            {roles.map(({ role, acteur }) => (
              <li>
                <strong>{role}</strong> : {acteur.data.nom}
              </li>
            ))}
          </ul>
        </>
      )
    }
  </ul>

  <div class="prose">
    <Content />
  </div>
</Layout>
